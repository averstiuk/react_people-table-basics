{"version":3,"sources":["api.ts","components/Header/Header.tsx","components/PeopleTable/PeopleTable.tsx","App.tsx","index.tsx"],"names":["getPeople","fetch","then","res","json","Header","className","to","PeopleTable","people","map","person","name","sex","born","died","motherName","fatherName","App","useState","setPeople","useEffect","peopleFromServer","mother","find","father","path","element","ReactDOM","render","document","getElementById"],"mappings":"8PAKO,SAASA,IACd,OACEC,MAJY,qEAKTC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,U,MAIhB,I,OCTMC,EAAmB,WAC9B,OACE,iCACE,sBAAKC,UAAU,SAAf,UACE,cAAC,IAAD,CAASC,GAAG,IAAID,UAAU,WAA1B,sBACA,cAAC,IAAD,CAASC,GAAG,UAAUD,UAAU,WAAhC,8BCAKE,G,MAA+B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC7C,OACE,wBAAOH,UAAU,oBAAjB,UACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,2CAGDG,EAAOC,KAAI,SAAAC,GAAM,OAChB,qBAAIL,UAAU,SAAd,UACE,6BAAKK,EAAOC,OACZ,6BAAKD,EAAOE,MACZ,6BAAKF,EAAOG,OACZ,6BAAKH,EAAOI,OACZ,6BAAKJ,EAAOK,aACZ,6BAAKL,EAAOM,wBCwCPC,EA3DO,WACpB,MAA4BC,mBAA0B,MAAtD,mBAAOV,EAAP,KAAeW,EAAf,KAeA,OAbAC,qBAAU,WACRrB,IACGE,MAAK,SAAAoB,GAAgB,OAAIA,EACvBZ,KAAI,SAAAC,GAAM,kCACNA,GADM,IAETY,QHJgBP,EGIEL,EAAOK,WHF/BhB,IACGE,MAAK,SAAAO,GAAM,OAAIA,EACbe,MAAK,SAAAb,GAAM,OAAIA,EAAOC,OAASI,SGC9BS,QHGgBR,EGHEN,EAAOM,WHK/BjB,IACGE,MAAK,SAAAO,GAAM,OAAIA,EACbe,MAAK,SAAAb,GAAM,OAAIA,EAAOC,OAASK,WAJf,IAACA,EARAD,QGOnBd,MAAK,SAAAoB,GACJF,EAAU,YAAIE,SAEjB,IAGD,sBAAKhB,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,0BAEA,cAAC,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CACEoB,KAAK,IACLC,QACE,qBAAKrB,UAAU,QAAf,yBAIJ,cAAC,IAAD,CACEoB,KAAK,QACLC,QAAS,cAAC,IAAD,CAAUpB,GAAG,QAGxB,cAAC,IAAD,CACEmB,KAAK,SACLC,QACE,qCACE,qBAAKrB,UAAU,QAAf,wBAECG,GACC,cAAC,EAAD,CAAaA,OAAQA,SAM7B,cAAC,IAAD,CACEiB,KAAK,aACLC,QACE,qBAAKrB,UAAU,QAAf,qCCtDZsB,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.018543b6.chunk.js","sourcesContent":["import { PersonData } from './types/PersonData';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport function getPeople(): Promise<PersonData[]> {\n  return (\n    fetch(API_URL)\n      .then(res => res.json())\n  );\n}\n\nexport const getMother = (motherName:string) => {\n  return (\n    getPeople()\n      .then(people => people\n        .find(person => person.name === motherName))\n  );\n};\n\nexport const getFather = (fatherName:string) => {\n  return (\n    getPeople()\n      .then(people => people\n        .find(person => person.name === fatherName))\n  );\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Header: React.FC = () => {\n  return (\n    <header>\n      <nav className=\"navbar\">\n        <NavLink to=\"/\" className=\"subtitle\">HomePage</NavLink>\n        <NavLink to=\"/people\" className=\"subtitle\">PeoplePage</NavLink>\n      </nav>\n    </header>\n  );\n};\n","import React from 'react';\nimport { Person } from '../../types/Person';\nimport './PeopleTable.scss';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table className=\"table PeopleTable\">\n      <tr>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n\n      {people.map(person => (\n        <tr className=\"Person\">\n          <td>{person.name}</td>\n          <td>{person.sex}</td>\n          <td>{person.born}</td>\n          <td>{person.died}</td>\n          <td>{person.motherName}</td>\n          <td>{person.fatherName}</td>\n        </tr>\n      ))}\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Route, Routes, Navigate } from 'react-router-dom';\nimport { getFather, getMother, getPeople } from './api';\nimport './App.scss';\nimport { Header } from './components/Header/Header';\nimport { PeopleTable } from './components/PeopleTable/PeopleTable';\nimport { Person } from './types/Person';\n\nconst App: React.FC = () => {\n  const [people, setPeople] = useState<Person[] | null>(null);\n\n  useEffect(() => {\n    getPeople()\n      .then(peopleFromServer => peopleFromServer\n        .map(person => ({\n          ...person,\n          mother: getMother(person.motherName),\n          father: getFather(person.fatherName),\n        })))\n      .then(peopleFromServer => {\n        setPeople([...peopleFromServer]);\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title is-1\">People table</h1>\n\n      <Header />\n\n      <Routes>\n        <Route\n          path=\"/\"\n          element={(\n            <div className=\"title\">Home page</div>\n          )}\n        />\n\n        <Route\n          path=\"/home\"\n          element={<Navigate to=\"/\" />}\n        />\n\n        <Route\n          path=\"people\"\n          element={(\n            <>\n              <div className=\"title\">Peope page</div>\n\n              {people && (\n                <PeopleTable people={people} />\n              )}\n            </>\n          )}\n        />\n\n        <Route\n          path=\":invoiceId\"\n          element={(\n            <div className=\"title\">Page not found</div>\n          )}\n        />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}